"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4475],{8301:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>d,metadata:()=>i,toc:()=>m});var n=a(5893),o=a(1151);const s='"use client";\n\nimport {\n  EmbraceSQLClient,\n  EmbraceSQLProvider,\n  Metadata,\n} from "../../client/dvdrental-react";\nimport "../sample.css";\n\nconst MetadataDisplay = () => {\n  // yep -  you can autocomplete on this\n\n  return (\n    <div className="card">\n      {Metadata.Schemas.map((s) => (\n        <div>\n          <div style={{ textAlign: "left" }}>{s.name}</div>\n          {s.Tables.map((t) => (\n            <div style={{ paddingLeft: "1em", textAlign: "left" }}>\n              {t.name}\n              {t.Columns.map((c) => (\n                <div style={{ paddingLeft: "1em", textAlign: "left" }}>\n                  {c.name}\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default function Page() {\n  // connect to where we mounted EmbraceSQL in our server\n  const client = new EmbraceSQLClient({\n    url: `/embracesql`,\n  });\n  return (\n    <EmbraceSQLProvider client={client}>\n      <MetadataDisplay />\n    </EmbraceSQLProvider>\n  );\n}\n';var r=a(9286);const d={},c="Database Metadata",i={id:"React/Cookbook/metadata",title:"Database Metadata",description:"Say you want to browse the schema, or explore database metadata about",source:"@site/docs/React/Cookbook/metadata.mdx",sourceDirName:"React/Cookbook",slug:"/React/Cookbook/metadata",permalink:"/docs/React/Cookbook/metadata",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Full Text Search",permalink:"/docs/React/Cookbook/fulltext"},next:{title:"Stored Procedure",permalink:"/docs/React/Cookbook/procedure"}},l={},m=[{value:"Requirements",id:"requirements",level:2},{value:"Steps",id:"steps",level:2},{value:"Code React",id:"code-react",level:3}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"database-metadata",children:"Database Metadata"}),"\n",(0,n.jsx)(t.p,{children:"Say you want to browse the schema, or explore database metadata about\ntables, columns and indexes."}),"\n",(0,n.jsx)(t.p,{children:"EmbraceSQL generates the metadata for you -- no need to query the system\ncatalogs."}),"\n",(0,n.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,n.jsxs)(t.p,{children:["Make sure you are read as specified in the ",(0,n.jsx)(t.a,{href:"./",children:"Cookbook"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"steps",children:"Steps"}),"\n",(0,n.jsx)(t.h3,{id:"code-react",children:"Code React"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"Metadata"})," is an exported object as a constant. No need to even hook."]}),"\n",(0,n.jsx)(r.Z,{language:"tsx",title:"src/app/by_index/page.tsx",children:s})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);