"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6971],{9925:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var a=s(5893),n=s(1151);const r={},l="Introduction",d={id:"index",title:"Introduction",description:"EmbraceSQL for data access -- you write the SQL -- we\u2019ll do the REST!",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Express",permalink:"/docs/express"},next:{title:"Problems",permalink:"/docs/problems"}},o={},c=[{value:"Getting Started",id:"getting-started",level:2}];function i(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsxs)(t.p,{children:["EmbraceSQL for data access -- you write the ",(0,a.jsx)(t.strong,{children:"SQL"})," -- we\u2019ll do the ",(0,a.jsx)(t.strong,{children:"REST"}),"!"]}),"\n",(0,a.jsxs)(t.p,{children:["Learn about the ",(0,a.jsx)(t.a,{href:"/docs/problems",children:"Problems"})," with data access. Then ",(0,a.jsx)(t.a,{href:"#getting-started",children:"Get Started"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,a.jsx)(t.p,{children:"You will need:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"A TypeScript project in need of strongly typed data access."}),"\n",(0,a.jsx)(t.li,{children:"a Postgres database that you want to access"}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["This example assumes a sample DVD rental database, source at ",(0,a.jsx)(t.a,{target:"_blank",href:s(4201).Z+"",children:"dvdrental.sql"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["You can use this database for testing with a local postgres, such as ",(0,a.jsx)(t.a,{href:"https://postgresapp.com",children:"Postgres.app"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"Create a sample dvdrental database if you like with:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"psql --file dvdrental.sql\n"})}),"\n",(0,a.jsx)(t.p,{children:"Going with this dvdrental example, assuming you are in the root directory\nof your typescript project."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"embracesql generate typescript-node --database postgres://postgres:postgres@localhost/dvdrental > ./src/dvdrental.ts\n\n"})}),"\n",(0,a.jsx)(t.p,{children:"Now you can use your fully typed database:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'import { Database } from "./src/dvdrental";\n    \nconst db = await Database.connect("postgres://postgres:postgres@localhost:5432/dvdrental");\n// calling a stored database function with positional, typed arguments.\nconst value = await db.Public.LastDay({ _0: new Date() });\nawait db.disconnect();\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Learn about ",(0,a.jsx)(t.a,{href:"/docs/autocrud",children:"AutoCRUD"})," to get at all the tables."]}),"\n",(0,a.jsxs)(t.p,{children:["Lear about ",(0,a.jsx)(t.a,{href:"/docs/sql",children:"SQL Scripts"})," to get any data you want -- all strongly typed."]})]})}function h(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(i,{...e})}):i(e)}},4201:(e,t,s)=>{s.d(t,{Z:()=>a});const a=s.p+"assets/files/dvdrental-fce04e68ea2322fb1e46aa23368b3c55.sql"}}]);