"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6177],{3642:(e,n,s)=>{s.d(n,{ZP:()=>l});var r=s(5893),t=s(1151);function a(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsx)(n.p,{children:"You are going to need:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"NodeJs >= 18"}),"\n",(0,r.jsx)(n.li,{children:"PostgreSQL >= 14"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These examples assume you are running locally with your shell able to connect\nto your PostgreSQL with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"psql\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Create a new database ",(0,r.jsx)(n.code,{children:"dvdrental"})," on your local PostgeSQL server."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl "https://embracesql.github.io/dvdrental.sql" | psql\n'})})]})}function l(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},9774:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>x,frontMatter:()=>o,metadata:()=>i,toc:()=>h});var r=s(5893),t=s(1151);const a='import { OperationDispatcher, Database } from "../../server/dvdrental";\nimport { EmbraceSQLRequest, EmbraceSQLResponse } from "@embracesql/shared";\n\n/**\n * Connect next app route to EmbraceSQL with a plain\n * PostgreSQL connection url.\n */\nfunction embraceSQL(postgresUrl: string) {\n  let database: Database;\n  return async (req: Request) => {\n    // do we already have a connection\n    if (!database) {\n      database = await Database.connect(postgresUrl);\n    }\n    // dispatcher finds the right method for a request\n    const dispatcher = new OperationDispatcher(database);\n    try {\n      // do we have a valid request?\n      const request: EmbraceSQLRequest<object, object> = await req.json();\n      if (!request.operation && !(request.parameters || request.values)) {\n        throw new Error("Invalid Request");\n      }\n      // now we are \ud83e\udd58\n      const results = await dispatcher.dispatch(request);\n      const response: EmbraceSQLResponse<unknown> = {\n        operation: request.operation,\n        headers: request.headers ?? {},\n        results,\n      };\n      return Response.json(response);\n    } catch (e) {\n      return new Response((e as Error)?.message, { status: 400 });\n    }\n  };\n}\n\n/**\n * NextJS POST route connection.\n */\nexport const POST = embraceSQL(\n  "postgres://postgres:postgres@localhost/dvdrental",\n);\n';var l=s(9286),c=s(3642);const o={},d="NextJS",i={id:"nextjs",title:"NextJS",description:"EmbraceSQL connects into NextJS with a single POST app route handler.",source:"@site/docs/nextjs.mdx",sourceDirName:".",slug:"/nextjs",permalink:"/docs/nextjs",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Express",permalink:"/docs/express"},next:{title:"Problems",permalink:"/docs/problems"}},p={},h=[{value:"Steps",id:"steps",level:2},{value:"NextJS App",id:"nextjs-app",level:3},{value:"Add EmbraceSQL",id:"add-embracesql",level:3},{value:"Code up a Route Handler",id:"code-up-a-route-handler",level:3},{value:"Test your Express",id:"test-your-express",level:3},{value:"Generate a Client",id:"generate-a-client",level:3}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"nextjs",children:"NextJS"}),"\n",(0,r.jsxs)(n.p,{children:["EmbraceSQL connects into NextJS with a single ",(0,r.jsx)(n.code,{children:"POST"})," app route handler."]}),"\n",(0,r.jsxs)(n.p,{children:["This provides full access to ",(0,r.jsx)(n.a,{href:"./autocrud",children:"AutoCRUD"})," and can be\nextended with your own ",(0,r.jsx)(n.a,{href:"./sql",children:"SQL"}),"."]}),"\n",(0,r.jsx)(c.ZP,{}),"\n",(0,r.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,r.jsx)(n.h3,{id:"nextjs-app",children:"NextJS App"}),"\n",(0,r.jsxs)(n.p,{children:["If you have an NextJS app great! -- if not ",(0,r.jsx)(n.a,{href:"https://nextjs.org/docs/getting-started/installation",children:"Create One"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Make sure to pick TypeScript!"}),"\n",(0,r.jsx)(n.h3,{id:"add-embracesql",children:"Add EmbraceSQL"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"cd"})," into the root of your application."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"npm install @embracesql/express\nmkdir -p ./src/server\nnpx embracesqlcli generate express --database postgres://postgres:postgres@localhost/dvdrental > ./src/server/dvdrental.ts\n"})}),"\n",(0,r.jsx)(n.h3,{id:"code-up-a-route-handler",children:"Code up a Route Handler"}),"\n",(0,r.jsx)(l.Z,{language:"typescript",title:"./src/embracesql/route.ts",children:a}),"\n",(0,r.jsx)(n.h3,{id:"test-your-express",children:"Test your Express"}),"\n",(0,r.jsx)(n.p,{children:"Start that server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"npm run dev\n"})}),"\n",(0,r.jsx)(n.p,{children:"And curl for some data:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'curl -X POST http://localhost:3000 \\\n   -H \'Content-Type: application/json\' \\\n   -d \'{"operation":"Public.Tables.Actor.ByActorId.read","parameters":{"actorId": 1}}\'\n'})}),"\n",(0,r.jsx)(n.h3,{id:"generate-a-client",children:"Generate a Client"}),"\n",(0,r.jsxs)(n.p,{children:["It's fun to ",(0,r.jsx)(n.code,{children:"curl"})," and all, but TypeScript is about types and autocompletion."]}),"\n",(0,r.jsxs)(n.p,{children:["Generate a fully typed ",(0,r.jsx)(n.code,{children:"fetch"})," wrapping client."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"npm install @embracesql/react\nnpx embracesqlcli generate react --database postgres://postgres:postgres@localhost/dvdrental > ./src/client/dvdrental-react.ts\n"})})]})}function x(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);